
upstream django_server {
    server unix:/home/deploy/dev/CPR-Music-Backend/deploy/dev/asgi.sock fail_timeout=0;
}

# https://gorails.com/deploy/ubuntu/20.04#nginx
server {
  # https://gorails.com/guides/free-ssl-with-rails-and-nginx-using-let-s-encrypt
  listen 80;
  listen [::]:80;
  # https://www.cyberciti.biz/faq/configure-nginx-to-use-only-tls-1-2-and-1-3/
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  ssl_certificate /etc/letsencrypt/live/teleband.cs.jmu.edu/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/teleband.cs.jmu.edu/privkey.pem;

  ssl_session_timeout 5m;
  ssl_protocols TLSv1.3;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_prefer_server_ciphers off;

  # HSTS (ngx_http_headers_module is required) (63072000 seconds)
  add_header Strict-Transport-Security "max-age=63072000" always;

  # https://www.linuxbabe.com/ubuntu/nginx-lets-encrypt-ubuntu-certbot
  #add_header Content-Security-Policy upgrade-insecure-requests;

  resolver 8.8.8.8;

  ssl_session_cache shared:SSL:10m;
  ssl_dhparam /home/deploy/dhparams.pem;

  # OCSP stapling
  ssl_trusted_certificate /etc/letsencrypt/live/teleband.cs.jmu.edu/chain.pem;


  server_name dev-api.tele.band;
  root /home/deploy/teleband/current/public;

  location / {
      # an HTTP header important enough to have its own Wikipedia entry:
      #   http://en.wikipedia.org/wiki/X-Forwarded-For
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # enable this if and only if you use HTTPS, this helps Rack
      # set the proper protocol for doing redirects:
      # proxy_set_header X-Forwarded-Proto https;

      # pass the Host: header from the client right along so redirects
      # can be set properly within the Rack application
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Proto $scheme;


      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;

      # set "proxy_buffering off" *only* for Rainbows! when doing
      # Comet/long-poll stuff.  It's also safe to set if you're
      # using only serving fast clients with Unicorn + nginx.
      # Otherwise you _want_ nginx to buffer responses to slow
      # clients, really.
      # proxy_buffering off;

      # Try to serve static files from nginx, no point in making an
      # *application* server like Unicorn/Rainbows! serve static files.
      proxy_pass http://django_server;
  }

}
